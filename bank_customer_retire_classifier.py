# -*- coding: utf-8 -*-
"""bank_customer_retire_classifier.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1hSVOmLxMNniU6JfJGb-vyw9b_UzK084w
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

bank_df = pd.read_csv('Bank_Customer_retirement.csv')

bank_df.head()

bank_df.shape

bank_df.info()

bank_df.describe()

bank_df.isnull().any()

bank_df.keys()

bank_df.keys()

sns.pairplot(bank_df,hue='Retire',vars =['Age','401K Savings'])

bank_df = bank_df.drop(['Customer ID'],axis=1)

bank_df.head()

X = bank_df.drop(['Retire'],axis=1)
y = bank_df['Retire']

X.shape

y.shape

from sklearn.model_selection import train_test_split
X_train,X_test,y_train,y_test = train_test_split(X,y,test_size = 0.2,random_state=0)

X_train.shape

X_test.shape

from sklearn.svm import SVC

model = SVC(C=10,gamma=0.001,kernel='linear')
model.fit(X_train,y_train)

y_pred= model.predict(X_test)

X_test['Prediction'] = y_pred

X_test

model.predict([[39.180417,322349.8740]])

model.score(X_test.drop('Prediction',axis=1),y_pred)

from sklearn.metrics import classification_report,confusion_matrix

cm = confusion_matrix(y_test,y_pred)

sns.heatmap(cm,annot=True)

print(classification_report(y_test,y_pred))

param_grid = {'C':[0.1,1,10,100],'gamma':[1,0.1,0.01,0.001]}

from sklearn.model_selection import GridSearchCV

grid = GridSearchCV(SVC(),param_grid,refit=0,verbose=4)
grid.fit(X_train,y_train)

grid.best_params_

